server:
  port: 8085

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9000

  kafka:
    bootstrap-servers: localhost:9092

  cloud:
    bus:
      destination: springCloudBus
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 30s
      routes:
        # -------- API ROUTES --------
        - id: REVIEW-SERVICE
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/api/v1/reviews/**
          filters:
            - name: CircuitBreaker
              args:
                name: reviewClient
                fallbackUri: forward:/__fallback/review
                statusCodes: 500,502,503,504

        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/products/**, /api/v1/categories/**
          filters:
            - name: CircuitBreaker
              args:
                name: productClient
                fallbackUri: forward:/__fallback/product
                statusCodes: 500,502,503,504

        - id: CART-SERVICE
          uri: lb://CART-SERVICE
          predicates:
            - Path=/api/v1/carts/**
          filters:
            - name: CircuitBreaker
              args:
                name: cartClient
                fallbackUri: forward:/__fallback/cart
                statusCodes: 500,502,503,504

        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderClient
                fallbackUri: forward:/__fallback/order
                statusCodes: 500,502,503,504

        - id: NOTI-SERVICE
          uri: lb://NOTI-SERVICE
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - name: CircuitBreaker
              args:
                name: notiClient
                fallbackUri: forward:/__fallback/noti
                statusCodes: 500,502,503,504

        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/oauth2/v1/**, /api/v1/auth/**, /api/v1/users/**, /api/v1/address/**, /connect/v1/**
          filters:
            - name: CircuitBreaker
              args:
                name: authClient
                fallbackUri: forward:/__fallback/auth
                statusCodes: 500,502,503,504

        # -------- OPENAPI (Swagger JSON) PROXY ROUTES --------
        - id: PRODUCT-OPENAPI
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/openapi/product
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

        - id: ORDER-OPENAPI
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/openapi/order
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

        - id: AUTH-OPENAPI
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/openapi/auth
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

        - id: CART-OPENAPI
          uri: lb://CART-SERVICE
          predicates:
            - Path=/openapi/cart
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

        - id: NOTI-OPENAPI
          uri: lb://NOTI-SERVICE
          predicates:
            - Path=/openapi/noti
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

        - id: REVIEW-OPENAPI
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/openapi/review
          filters:
            - name: SetPath
              args:
                template: /v3/api-docs

resilience4j:
  circuitbreaker:
    configs:
      defaultProfile:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        slowCallDurationThreshold: 4s
        slowCallRateThreshold: 60
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      productClient: { baseConfig: defaultProfile }
      cartClient:    { baseConfig: defaultProfile }
      orderClient:
        baseConfig: defaultProfile
        slowCallDurationThreshold: 8s
      notiClient:    { baseConfig: defaultProfile }
      authClient:
        baseConfig: defaultProfile
        slowCallDurationThreshold: 3s
      reviewClient:  { baseConfig: defaultProfile }

  timelimiter:
    instances:
      productClient: { timeoutDuration: 3s,  cancelRunningFuture: true }
      cartClient:    { timeoutDuration: 4s,  cancelRunningFuture: true }
      orderClient:   { timeoutDuration: 25s, cancelRunningFuture: true }
      notiClient:    { timeoutDuration: 3s,  cancelRunningFuture: true }
      authClient:    { timeoutDuration: 3s,  cancelRunningFuture: true }
      reviewClient:  { timeoutDuration: 5s,  cancelRunningFuture: true }

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.filter.factory.SpringCloudCircuitBreakerResilience4JFilterFactory: DEBUG
    io.github.resilience4j.circuitbreaker: DEBUG
    reactor.netty.http.client: DEBUG

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    urls:
      - name: product-service
        url: /openapi/product
      - name: order-service
        url: /openapi/order
      - name: auth-service
        url: /openapi/auth
      - name: cart-service
        url: /openapi/cart
      - name: noti-service
        url: /openapi/noti
      - name: review-service
        url: /openapi/review
    persistAuthorization: true
    oauth:
      client-id: client
      client-secret: secret
      use-pkce-with-authorization-code-grant: false
      scope-separator: " "
  api-docs:
    enabled: true

auth:
  token-url: http://localhost:8085/oauth2/v1/token
  scopes: client-internal

management:
  endpoints:
    web:
      exposure:
        include: health,info,refresh,busrefresh
  endpoint:
    health:
      show-details: always
