server:
  port: ${GATEWAY_PORT:8085}

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_ISSUER:http://localhost:9000}

  cloud:
    gateway:
      httpclient:
        connect-timeout: ${GW_CONNECT_TIMEOUT:2000}
        response-timeout: ${GW_RESPONSE_TIMEOUT:30s}
      routes:
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/products/**, /api/v1/categories/**
          filters:
            - name: CircuitBreaker
              args:
                name: productClient
                fallbackUri: forward:/__fallback/product
                statusCodes: 500,502,503,504

        - id: CART-SERVICE
          uri: lb://CART-SERVICE
          predicates:
            - Path=/api/v1/carts/**
          filters:
            - name: CircuitBreaker
              args:
                name: cartClient
                fallbackUri: forward:/__fallback/cart
                statusCodes: 500,502,503,504

        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderClient
                fallbackUri: forward:/__fallback/order
                statusCodes: 500,502,503,504

        - id: NOTI-SERVICE
          uri: lb://NOTI-SERVICE
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - name: CircuitBreaker
              args:
                name: notiClient
                fallbackUri: forward:/__fallback/noti
                statusCodes: 500,502,503,504

        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/oauth2/v1/**, /api/v1/auth/**, /api/v1/users/**, /api/v1/address/**, /connect/v1/**
          filters:
            - name: CircuitBreaker
              args:
                name: authClient
                fallbackUri: forward:/__fallback/auth
                statusCodes: 500,502,503,504

resilience4j:
  circuitbreaker:
    configs:
      defaultProfile:
        slidingWindowType: ${CB_WINDOW_TYPE:COUNT_BASED}
        slidingWindowSize: ${CB_WINDOW_SIZE:20}
        minimumNumberOfCalls: ${CB_MIN_CALLS:10}
        failureRateThreshold: ${CB_FAILURE_RATE:50}
        slowCallDurationThreshold: ${CB_SLOW_DURATION:4s}
        slowCallRateThreshold: ${CB_SLOW_RATE:60}
        waitDurationInOpenState: ${CB_OPEN_WAIT:10s}
        permittedNumberOfCallsInHalfOpenState: ${CB_HALF_OPEN_CALLS:5}
        automaticTransitionFromOpenToHalfOpenEnabled: ${CB_AUTO_TRANSITION:true}
    instances:
      productClient: { baseConfig: defaultProfile }
      cartClient:    { baseConfig: defaultProfile }
      orderClient:
        baseConfig: defaultProfile
        slowCallDurationThreshold: ${ORDER_SLOW_DURATION:8s}
      notiClient:    { baseConfig: defaultProfile }
      authClient:
        baseConfig: defaultProfile
        slowCallDurationThreshold: ${AUTH_SLOW_DURATION:3s}

  timelimiter:
    instances:
      productClient: { timeoutDuration: ${TL_PRODUCT:3s}, cancelRunningFuture: true }
      cartClient:    { timeoutDuration: ${TL_CART:4s},   cancelRunningFuture: true }
      orderClient:   { timeoutDuration: ${TL_ORDER:25s}, cancelRunningFuture: true }
      notiClient:    { timeoutDuration: ${TL_NOTI:3s},   cancelRunningFuture: true }
      authClient:    { timeoutDuration: ${TL_AUTH:3s},   cancelRunningFuture: true }

management:
  endpoints:
    web.exposure.include: "*"
  health.show-details: always

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka}

logging:
  level:
    org.springframework.cloud.gateway: ${LOG_GW:DEBUG}
    org.springframework.cloud.gateway.filter.factory.SpringCloudCircuitBreakerResilience4JFilterFactory: ${LOG_CB_FILTER:DEBUG}
    io.github.resilience4j.circuitbreaker: ${LOG_CB:DEBUG}
    reactor.netty.http.client: ${LOG_NETTY:DEBUG}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    urls:
      - name: product-service
        url: /openapi/product
      - name: order-service
        url: /openapi/order
      - name: auth-service
        url: /openapi/auth
      - name: cart-service
        url: /openapi/cart
      - name: noti-service
        url: /openapi/noti
    persist-authorization: true
    oauth:
      client-id: ${SWAGGER_CLIENT_ID:swagger-ui}
      use-pkce-with-authorization-code-grant: true     # ✅ dùng PKCE, KHÔNG để client-secret trong UI
      scope-separator: " "
      oauth2-redirect-url: ${SWAGGER_REDIRECT_URL:http://localhost:${GATEWAY_PORT:8085}/swagger-ui/oauth2-redirect.html}

auth:
  token-url: ${AUTH_TOKEN_URL:http://localhost:${GATEWAY_PORT:8085}/oauth2/v1/token}
  scopes: ${AUTH_SCOPES:client-internal}
